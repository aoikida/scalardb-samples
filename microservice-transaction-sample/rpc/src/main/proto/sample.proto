syntax = "proto3";

option java_multiple_files = true;
option java_package = "sample.rpc";
option java_outer_classname = "Sample";

package rpc;

import "google/protobuf/empty.proto";

// for Cassandra
service Cassandra {
  //Create user infomation which spans mulitple databases
  rpc CreateUserOnCassandra(CreateUserOnCassandraRequest) returns (CreateUserOnCassandraResponse) {
  }
  //Get user information
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
  }
  //Create post information
  rpc CreatePost(CreatePostRequest) returns (CreatePostResponse) {
  }
  //Get post information
  rpc GetPost(GetPostRequest) returns (GetPostResponse) {
  }

  rpc GetAllPosts(GetAllPostsRequest) returns (stream GetAllPostsResponse) {
  }
}


message CreateUserOnCassandraRequest {
  int32 user_id = 1;
  string name = 2;
  string password = 3;
}

message CreateUserOnCassandraResponse {

}

message Post {
  int32 post_id = 1;
  int32 user_id = 2;
  string content = 3;
}

message GetUserRequest {
  int32 user_id = 1;
}

message GetUserResponse {
  int32 user_id = 1;
  string name = 2;
  string password = 3;
}

message CreatePostRequest {
  int32 post_id = 1;
  int32 user_id = 2;
  string content = 3;
}

message CreatePostResponse {

}

message GetPostRequest {
  int32 post_id = 1;
}

message GetPostResponse {
  int32 post_id = 1;
  int32 user_id = 2;
  string content = 3;
}

message GetAllPostsRequest {

}

message GetAllPostsResponse {
  repeated Post posts = 1;
}


// for Mysql
service Mysql {
  //Get user information
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
  }
  //Create post information
  rpc CreatePost(CreatePostRequest) returns (CreatePostResponse) {
  }
  //Get post information
  rpc GetPost(GetPostRequest) returns (GetPostResponse) {
  }

  rpc GetAllPosts(GetAllPostsRequest) returns (stream GetAllPostsResponse) {
  }

  // RPCs for two-phase commit transactions

  //Create user infomation
  rpc CreateUserOnMysql(CreateUserOnMysqlRequest) returns (google.protobuf.Empty) {
  }
  // Prepare the transaction
  rpc Prepare(PrepareRequest) returns (google.protobuf.Empty) {
  }
  // Validate the transaction
  rpc Validate(ValidateRequest) returns (google.protobuf.Empty) {
  }
  // Commit the transaction
  rpc Commit(CommitRequest) returns (google.protobuf.Empty) {
  }
  // Rollback the transaction
  rpc Rollback(RollbackRequest) returns (google.protobuf.Empty) {
  }
}

message CreateUserOnMysqlRequest {
  int32 user_id = 1;
  string name = 2;
  string password = 3;
  string transaction_id = 4;
}

message PrepareRequest {
  string transaction_id = 1;
}

message ValidateRequest {
  string transaction_id = 1;
}

message CommitRequest {
  string transaction_id = 1;
}

message RollbackRequest {
  string transaction_id = 1;
}
